version: 2.1

executors:
  macos:
    macos:
      xcode: 15.4.0
    resource_class: 'macos.m1.medium.gen1'

orbs:
  slack: circleci/slack@4.13.1
  android: circleci/android@2.5.0

commands:
  notify_slack_error_ios:
    steps:
      - slack/notify:
          event: fail
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "CircleCI has just ran the:apple_ci:iOS React Native E2E tests, but they failed. Review the failures here: \n *<$CIRCLE_BUILD_URL | :circleci: Open build>*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project:*\n$CIRCLE_PROJECT_REPONAME"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n$CIRCLE_BRANCH"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:* \n <https://github.com/Judopay/JudoKit-ReactNative/commit/${CIRCLE_SHA1} | ${CIRCLE_SHA1:0:7}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Author:*\n$CIRCLE_USERNAME"
                    }
                  ]
                }
              ]
            }
  notify_slack_pass_ios:
    steps:
      - slack/notify:
          event: pass
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "CircleCI has just *successfully* ran the:apple_ci:iOS React Native E2E tests! \n *<$CIRCLE_BUILD_URL | :circleci: Open build>*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project:*\n$CIRCLE_PROJECT_REPONAME"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n$CIRCLE_BRANCH"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:* \n <https://github.com/Judopay/JudoKit-ReactNative/commit/${CIRCLE_SHA1} | ${CIRCLE_SHA1:0:7}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Author:*\n$CIRCLE_USERNAME"
                    }
                  ]
                }
              ]
            }
  notify_slack_pass_android:
    steps:
      - slack/notify:
          event: pass
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "CircleCI has just *successfully* ran the :android: Android React Native E2E tests! \n *<$CIRCLE_BUILD_URL | :circleci: Open build>*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project:*\n$CIRCLE_PROJECT_REPONAME"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n$CIRCLE_BRANCH"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:* \n <https://github.com/Judopay/JudoKit-ReactNative/commit/${CIRCLE_SHA1} | ${CIRCLE_SHA1:0:7}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Author:*\n$CIRCLE_USERNAME"
                    }
                  ]
                }
              ]
            }
  notify_slack_error_android:
    steps:
      - slack/notify:
          event: fail
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "CircleCI has just ran the :android: Android React Native E2E tests, but they failed. Review the failures here: \n *<$CIRCLE_BUILD_URL | :circleci: Open build>*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project:*\n$CIRCLE_PROJECT_REPONAME"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n$CIRCLE_BRANCH"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:* \n <https://github.com/Judopay/JudoKit-ReactNative/commit/${CIRCLE_SHA1} | ${CIRCLE_SHA1:0:7}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Author:*\n$CIRCLE_USERNAME"
                    }
                  ]
                }
              ]
            }
  yarn_install:
    description: Install dependencies using Yarn. This command correctly configures the cache for any number of package.json and yarn.lock files.

    parameters:
      cache_folder:
        description: The path to the yarn cache folder.  Defaults to /tmp/yarn
        type: string
        default: '/tmp/yarn'

    steps:
      - run:
          name: Create cache checksum file
          command: |
            mkdir -p ~/.tmp/checksumfiles
            find . -type f -name 'package.json' -not -path "*node_modules*" -exec cat {} + >> ~/.tmp/checksumfiles/package.json
            find . -type f -name 'yarn.lock' -not -path "*node_modules*" -exec cat {} + >> ~/.tmp/checksumfiles/yarn.lock
      - restore_cache:
          keys:
            - yarn-cache-{{ arch }}-{{ checksum "~/.tmp/checksumfiles/package.json" }}-{{ checksum "~/.tmp/checksumfiles/yarn.lock" }}-{{ .Environment.CACHE_VERSION }}
      - run:
          name: Yarn Install
          command: 'export YARN_CACHE_FOLDER=<<parameters.cache_folder>> && yarn install --immutable'
      - save_cache:
          paths:
            - <<parameters.cache_folder>>
          key: yarn-cache-{{ arch }}-{{ checksum "~/.tmp/checksumfiles/package.json" }}-{{ checksum "~/.tmp/checksumfiles/yarn.lock" }}-{{ .Environment.CACHE_VERSION }}
  pod_install:
    description: Install CocoaPods dependencies for an iOS project. This command correctly configures the cache for the Pods directory and Podfile.lock.
    parameters:
      pod_install_directory:
        type: string
        default: 'example/ios'
        description: The location of the "ios" directory
    steps:
      - restore_cache:
          keys:
            - '{{ .Environment.CACHE_VERSION }}-cache-pods-{{ checksum "<<parameters.pod_install_directory>>/Podfile.lock" }}'
      - run:
          name: Install CocoaPods
          environment:
            COCOAPODS_DISABLE_STATS: true
          command: bundle exec pod install
          working_directory: <<parameters.pod_install_directory>>
      - save_cache:
          paths:
            - <<parameters.pod_install_directory>>/Pods
          key: '{{ .Environment.CACHE_VERSION }}-cache-pods-{{ checksum "<<parameters.pod_install_directory>>/Podfile.lock" }}'
  brew_install:
    description: Install packages using Homebrew, and cache the Homebrew cache.
    parameters:
      tools:
        type: string
        default: 'ktlint clang-format'
    steps:
      - restore_cache:
          key: brew-cache-{{ arch }}-{{ .Environment.CACHE_VERSION }}
      - run:
          environment:
            HOMEBREW_NO_AUTO_UPDATE: 1
          name: Installing requested packages
          command: brew install << parameters.tools >>
      - save_cache:
          paths:
            - ~/Library/Caches/Homebrew
          key: brew-cache-{{ arch }}-{{ .Environment.CACHE_VERSION }}
  android_sdk_install:
    description: Install Android SDK
    steps:
      - brew_install:
          tools: 'openjdk@17 android-commandlinetools'
      - run:
          name: Configuring Environment Variables
          command: |
            echo 'export PATH="$PATH:/usr/local/opt/node@18/bin:~/.yarn/bin:~/project/node_modules/.bin:~/project/example/node_modules/.bin"' >> $BASH_ENV
            echo 'export ANDROID_HOME="/opt/homebrew/share/android-commandlinetools"' >> $BASH_ENV
            echo 'export ANDROID_SDK_ROOT="/opt/homebrew/share/android-commandlinetools"' >> $BASH_ENV
            echo 'export PATH="$ANDROID_SDK_ROOT/emulator:$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/platform-tools:$PATH"' >> $BASH_ENV
            echo 'export JAVA_HOME=$(/opt/homebrew/opt/openjdk@17/bin/java)' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Accepting Android Licenses
          command: yes | sdkmanager --licenses || true
      - run:
          name: Updating all installed SDK components
          command: sdkmanager --update
  bundle_install:
    description: Install Ruby dependencies using Bundler. This command correctly configures the cache for the Gemfile and Gemfile.lock.
    steps:
      - restore_cache:
          keys:
            - bundle-cache-{{ arch }}-{{ checksum "Gemfile.lock" }}-{{ .Environment.CACHE_VERSION }}
      - run:
          name: Install Ruby dependencies with Bundler
          command: |
            bundle config set --local clean 'true'
            bundle config set --local path 'vendor/bundle'
            bundle check || bundle install
      - save_cache:
          paths:
            - vendor/bundle
          key: bundle-cache-{{ arch }}-{{ checksum "Gemfile.lock" }}-{{ .Environment.CACHE_VERSION }}
  setup_avd_screen_size:
    description: Set up the Android Virtual Device screen size
    parameters:
      avd_name:
        description: The name of the Android Virtual Device
        type: string
        default: 'Pixel_3a_API_34_x86_64'
      width:
        description: The width of the screen in pixels
        type: string
        default: '1440'
      height:
        description: The height of the screen in pixels
        type: string
        default: '2560'
      density:
        description: The screen density in DPI
        type: string
        default: '480'
      size:
        description: The screen size type
        type: string
        default: 'normal'
    steps:
      - run:
          name: Set up AVD screen size
          command: |
            echo "hw.lcd.density=<< parameters.density >>" >> ~/.android/avd/<< parameters.avd_name >>.avd/config.ini
            echo "hw.lcd.height=<< parameters.height >>" >> ~/.android/avd/<< parameters.avd_name >>.avd/config.ini
            echo "hw.lcd.width=<< parameters.width >>" >> ~/.android/avd/<< parameters.avd_name >>.avd/config.ini
            echo "hw.screen.size=<< parameters.size >>" >> ~/.android/avd/<< parameters.avd_name >>.avd/config.ini
jobs:
  checkout_project:
    executor: macos
    steps:
      - checkout
      - bundle_install
      - yarn_install
      - pod_install
      - persist_to_workspace:
          paths: .
          root: .
  lint_sdk:
    executor: macos
    steps:
      - attach_workspace:
          at: .
      - brew_install:
          tools: 'ktlint clang-format'
      - run:
          name: Running SDK linters (Typescript type check, ESLint, Kotlin, ObjC)
          command: bundle exec fastlane lint
  build_sdk:
    executor: macos
    steps:
      - attach_workspace:
          at: .
      - android_sdk_install
      - run:
          name: Build SDK
          command: |
            bundle exec fastlane build build_for_distribution:false
  unit_test_sdk:
    executor: macos
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Unit Tests
          command: bundle exec fastlane test
  publish_example_apps:
    executor: macos
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Store Google Service Account
          command: |
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - android_sdk_install
      - run:
          name: Distribute Sample Apps
          command: |
            export GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gcloud-service-key.json
            bundle exec fastlane distribute_sample_apps
  release_sdk:
    executor: macos
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Publish SDK to NPM
          command: |
            bundle exec fastlane release
  report_to_jira:
    docker:
      - image: europe-docker.pkg.dev/opnf-management/docker/deployer:latest
        auth:
          username: _json_key
          password: $GCLOUD_SERVICE_KEY
    parameters:
      environment:
        type: string
    steps:
      - checkout
      - run:
          name: Report Deployment to Jira
          environment:
            ENVIRONMENT: << parameters.environment >>
          command: /resources/scripts/report-status-to-jira.sh
  run_e2e_ios:
    executor: macos
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Add Wix repository to Homebrew so that we can install applesimutils
          command: |
            brew tap wix/brew
      - brew_install:
          tools: 'applesimutils'
      - run:
          name: Run Detox tests
          working_directory: example
          command: |
            yarn start &
            yarn detox:build:ios
            yarn detox:test:ios
      - store_artifacts:
          path: example/artifacts
      - notify_slack_error_ios
      - notify_slack_pass_ios
  run_e2e_android:
    executor:
      name: android/android-machine
      resource-class: large
      tag: 2024.04.1
    steps:
      - checkout
      - yarn_install
      - android/accept-licenses
      - android/create-avd:
          avd-name: Pixel_3a_API_34_x86_64
          system-image: system-images;android-34;google_apis;x86_64
          install: true
      - setup_avd_screen_size:
          avd_name: Pixel_3a_API_34_x86_64
      - android/start-emulator:
          avd-name: Pixel_3a_API_34_x86_64
          no-window: true
          restore-gradle-cache-prefix: v1a
          post-emulator-launch-assemble-command: 'echo "Emulator is ready"'
      - run:
          name: Disable gesture navigation
          command: |
            adb shell cmd overlay enable com.android.internal.systemui.navbar.threebutton
      - run:
          name: Run the tests
          working_directory: example
          command: |
            yarn start &
            yarn detox:build:android
            yarn detox:test:android
      - android/save-gradle-cache:
          cache-prefix: v1a
      - store_artifacts:
          path: example/artifacts
      - notify_slack_error_android
      - notify_slack_pass_android

workflows:
  pull_request_checks:
    jobs:
      - checkout_project:
          filters:
            branches:
              ignore:
                - master
      - lint_sdk:
          requires:
            - checkout_project
      - build_sdk:
          requires:
            - lint_sdk
      - unit_test_sdk:
          requires:
            - build_sdk
  distribute_example_apps:
    jobs:
      - checkout_project:
          filters:
            branches:
              only:
                - master
      - publish_example_apps:
          context: shared-secrets
          requires:
            - checkout_project
      - report_to_jira:
          context: shared-secrets
          environment: staging
          requires:
            - publish_example_apps
  publish_sdk:
    jobs:
      - checkout_project:
          filters:
            branches:
              ignore:
                - /.*/
            tags:
              only:
                - /^v[0-9]+(\.[0-9]+)*$/
      - release_sdk:
          context: shared-secrets
          requires:
            - checkout_project
          filters:
            branches:
              ignore:
                - /.*/
            tags:
              only:
                - /^v[0-9]+(\.[0-9]+)*$/
      - report_to_jira:
          context: shared-secrets
          environment: prod
          requires:
            - release_sdk
          filters:
            branches:
              ignore:
                - /.*/
            tags:
              only:
                - /^v[0-9]+(\.[0-9]+)*$/
  e2e:
    jobs:
      - checkout_project:
          filters:
            branches:
              only:
                - master
      - run_e2e_ios:
          requires:
            - checkout_project
          filters:
            branches:
              only:
                - master
      - run_e2e_android:
          filters:
            branches:
              only:
                - master
